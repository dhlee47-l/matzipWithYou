<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.member.repository.MemberRepository">

    <sql id="SELECT_BASE">
        SELECT id       "id"
             , username "username" -- id
             , password "password" -- 비번
             , email    "email" -- email
             , point    "point" -- point
             , nickname "nickname" -- nickname
             , name     "name" -- 이름
        FROM member
        WHERE 1 = 1
    </sql>

    <insert id="save" flushCache="true" parameterType="com.lec.spring.member.domain.Member"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO member(username, password, email, point, nickname, name)
        VALUES(#{username}, #{password}, #{email}, #{point}, #{nickname}, #{name})
    </insert>

    <update id="update" flushCache="true" parameterType="com.lec.spring.member.domain.Member">
        UPDATE member
        SET password = #{password}
          , email = #{email}
          , nickname = #{nickname}
          , name = #{name}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM member WHERE id = #{id}
    </delete>

    <select id="findAll" resultType="com.lec.spring.member.domain.Member">
        <include refid="SELECT_BASE"/>
    </select>

    <select id="findById" resultType="com.lec.spring.member.domain.Member">
        <include refid="SELECT_BASE"/>
        AND id = #{id}
    </select>

    <select id="findByUsername" resultType="com.lec.spring.member.domain.Member">
        <include refid="SELECT_BASE"/>
        AND username = #{username}
    </select>

    <select id="findByNickname" resultType="com.lec.spring.member.domain.Member">
        <include refid="SELECT_BASE"/>
        AND nickname = #{nickname}
    </select>

    <select id="findByEmail" resultType="com.lec.spring.member.domain.Member">
        <include refid="SELECT_BASE"/>
        AND email = #{email}
    </select>

    <update id="updatePoint">
        UPDATE member
        SET point = point + #{point}
        WHERE id = #{id}
    </update>
<!--비밀번호 재설정-->
<!--이메일 찾기-->
    <select id="selectEmail">
        select id, email
        from member
        where email =#{email}
    </select>
<!--비밀번호 업데이트하기-->
    <update id="updatePassword">
        update member
        set password = #{newPassword}
        where id = #{id}
    </update>
<!--이메일로 아이디 찾기-->
    <select id="findMemberIdByEmail" >
        select id from member where email = #{email}
    </select>

</mapper>