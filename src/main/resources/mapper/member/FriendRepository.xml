<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.member.repository.FriendRepository">
    <sql id="SELECT_BASE">
        SELECT sender_id "sender_id"
            , receiver_id "receiver_id"
            , intimacy "intimacy"
            , is_accept "is_accept"
            , regdate "regdate"
        FROM friend
        WHERE 1 = 1
    </sql>

    <!-- 친구 저장 -->
    <insert id="save" flushCache="true" parameterType="com.lec.spring.member.domain.Friend">
        INSERT INTO friend (sender_id, receiver_id, is_accept, regdate)
        VALUES (#{senderId}, #{revceiverId}, false, now())
    </insert>


    <!-- 친구 요청 보내기 -->
    <insert id="sendFriendRequest" parameterType="com.lec.spring.member.domain.Friend">
        INSERT INTO friend(sender_id, receiver_id, is_accept, regdate)
        VALUES (#{senderId}, #{receiverId}, false, now())
    </insert>

    <!-- 보낸 요청과 받은 요청 중 대기 중인 목록 -->
    <select id="findPendingRequests" parameterType="com.lec.spring.member.domain.Friend" resultType="com.lec.spring.member.domain.Friend">
        SELECT * FROM friend f
        JOIN member m ON (f.sender_id = m.id OR f.receiver_id = m.id)
        WHERE m.id = #{userId}
          AND f.is_accept = false
    </select>


    <!-- 수락된 친구 목록 조회 -->
    <select id="findFriends" parameterType="com.lec.spring.member.domain.Friend" resultType="com.lec.spring.member.domain.Friend">
        SELECT * FROM friend f
        JOIN member m ON (f.sender_id = m.id OR f.receiver_id = m.id)
        WHERE (sender_id = #{userId} OR receiver_id = #{userId})
          AND is_accept = true
    </select>

    <!-- 친구 삭제 -->
    <delete id="delete" parameterType="com.lec.spring.member.domain.Friend">
        DELETE FROM friend f WHERE sender_id = #{senderId} AND receiver_id = #{receiverId}
    </delete>


</mapper>